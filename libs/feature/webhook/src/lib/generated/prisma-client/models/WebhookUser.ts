
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `WebhookUser` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/client"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model WebhookUser
 * 
 */
export type WebhookUserModel = runtime.Types.Result.DefaultSelection<Prisma.$WebhookUserPayload>

export type AggregateWebhookUser = {
  _count: WebhookUserCountAggregateOutputType | null
  _min: WebhookUserMinAggregateOutputType | null
  _max: WebhookUserMaxAggregateOutputType | null
}

export type WebhookUserMinAggregateOutputType = {
  id: string | null
  externalTenantId: string | null
  externalUserId: string | null
  userRole: $Enums.WebhookRole | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WebhookUserMaxAggregateOutputType = {
  id: string | null
  externalTenantId: string | null
  externalUserId: string | null
  userRole: $Enums.WebhookRole | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type WebhookUserCountAggregateOutputType = {
  id: number
  externalTenantId: number
  externalUserId: number
  userRole: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type WebhookUserMinAggregateInputType = {
  id?: true
  externalTenantId?: true
  externalUserId?: true
  userRole?: true
  createdAt?: true
  updatedAt?: true
}

export type WebhookUserMaxAggregateInputType = {
  id?: true
  externalTenantId?: true
  externalUserId?: true
  userRole?: true
  createdAt?: true
  updatedAt?: true
}

export type WebhookUserCountAggregateInputType = {
  id?: true
  externalTenantId?: true
  externalUserId?: true
  userRole?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type WebhookUserAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WebhookUser to aggregate.
   */
  where?: Prisma.WebhookUserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebhookUsers to fetch.
   */
  orderBy?: Prisma.WebhookUserOrderByWithRelationInput | Prisma.WebhookUserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.WebhookUserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebhookUsers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebhookUsers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned WebhookUsers
  **/
  _count?: true | WebhookUserCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: WebhookUserMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: WebhookUserMaxAggregateInputType
}

export type GetWebhookUserAggregateType<T extends WebhookUserAggregateArgs> = {
      [P in keyof T & keyof AggregateWebhookUser]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWebhookUser[P]>
    : Prisma.GetScalarType<T[P], AggregateWebhookUser[P]>
}




export type WebhookUserGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WebhookUserWhereInput
  orderBy?: Prisma.WebhookUserOrderByWithAggregationInput | Prisma.WebhookUserOrderByWithAggregationInput[]
  by: Prisma.WebhookUserScalarFieldEnum[] | Prisma.WebhookUserScalarFieldEnum
  having?: Prisma.WebhookUserScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: WebhookUserCountAggregateInputType | true
  _min?: WebhookUserMinAggregateInputType
  _max?: WebhookUserMaxAggregateInputType
}

export type WebhookUserGroupByOutputType = {
  id: string
  externalTenantId: string
  externalUserId: string
  userRole: $Enums.WebhookRole
  createdAt: Date
  updatedAt: Date
  _count: WebhookUserCountAggregateOutputType | null
  _min: WebhookUserMinAggregateOutputType | null
  _max: WebhookUserMaxAggregateOutputType | null
}

type GetWebhookUserGroupByPayload<T extends WebhookUserGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WebhookUserGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof WebhookUserGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WebhookUserGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WebhookUserGroupByOutputType[P]>
      }
    >
  > 



export type WebhookUserWhereInput = {
  AND?: Prisma.WebhookUserWhereInput | Prisma.WebhookUserWhereInput[]
  OR?: Prisma.WebhookUserWhereInput[]
  NOT?: Prisma.WebhookUserWhereInput | Prisma.WebhookUserWhereInput[]
  id?: Prisma.UuidFilter<"WebhookUser"> | string
  externalTenantId?: Prisma.UuidFilter<"WebhookUser"> | string
  externalUserId?: Prisma.UuidFilter<"WebhookUser"> | string
  userRole?: Prisma.EnumWebhookRoleFilter<"WebhookUser"> | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFilter<"WebhookUser"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WebhookUser"> | Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookListRelationFilter
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookListRelationFilter
}

export type WebhookUserOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  externalTenantId?: Prisma.SortOrder
  externalUserId?: Prisma.SortOrder
  userRole?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookOrderByRelationAggregateInput
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookOrderByRelationAggregateInput
}

export type WebhookUserWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  externalTenantId_externalUserId?: Prisma.WebhookUserExternalTenantIdExternalUserIdCompoundUniqueInput
  AND?: Prisma.WebhookUserWhereInput | Prisma.WebhookUserWhereInput[]
  OR?: Prisma.WebhookUserWhereInput[]
  NOT?: Prisma.WebhookUserWhereInput | Prisma.WebhookUserWhereInput[]
  externalTenantId?: Prisma.UuidFilter<"WebhookUser"> | string
  externalUserId?: Prisma.UuidFilter<"WebhookUser"> | string
  userRole?: Prisma.EnumWebhookRoleFilter<"WebhookUser"> | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFilter<"WebhookUser"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"WebhookUser"> | Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookListRelationFilter
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookListRelationFilter
}, "id" | "externalTenantId_externalUserId">

export type WebhookUserOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  externalTenantId?: Prisma.SortOrder
  externalUserId?: Prisma.SortOrder
  userRole?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.WebhookUserCountOrderByAggregateInput
  _max?: Prisma.WebhookUserMaxOrderByAggregateInput
  _min?: Prisma.WebhookUserMinOrderByAggregateInput
}

export type WebhookUserScalarWhereWithAggregatesInput = {
  AND?: Prisma.WebhookUserScalarWhereWithAggregatesInput | Prisma.WebhookUserScalarWhereWithAggregatesInput[]
  OR?: Prisma.WebhookUserScalarWhereWithAggregatesInput[]
  NOT?: Prisma.WebhookUserScalarWhereWithAggregatesInput | Prisma.WebhookUserScalarWhereWithAggregatesInput[]
  id?: Prisma.UuidWithAggregatesFilter<"WebhookUser"> | string
  externalTenantId?: Prisma.UuidWithAggregatesFilter<"WebhookUser"> | string
  externalUserId?: Prisma.UuidWithAggregatesFilter<"WebhookUser"> | string
  userRole?: Prisma.EnumWebhookRoleWithAggregatesFilter<"WebhookUser"> | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"WebhookUser"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"WebhookUser"> | Date | string
}

export type WebhookUserCreateInput = {
  id?: string
  externalTenantId: string
  externalUserId: string
  userRole: $Enums.WebhookRole
  createdAt?: Date | string
  updatedAt?: Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookCreateNestedManyWithoutWebhookUser_Webhook_createdByToWebhookUserInput
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookCreateNestedManyWithoutWebhookUser_Webhook_updatedByToWebhookUserInput
}

export type WebhookUserUncheckedCreateInput = {
  id?: string
  externalTenantId: string
  externalUserId: string
  userRole: $Enums.WebhookRole
  createdAt?: Date | string
  updatedAt?: Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookUncheckedCreateNestedManyWithoutWebhookUser_Webhook_createdByToWebhookUserInput
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookUncheckedCreateNestedManyWithoutWebhookUser_Webhook_updatedByToWebhookUserInput
}

export type WebhookUserUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  externalTenantId?: Prisma.StringFieldUpdateOperationsInput | string
  externalUserId?: Prisma.StringFieldUpdateOperationsInput | string
  userRole?: Prisma.EnumWebhookRoleFieldUpdateOperationsInput | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookUpdateManyWithoutWebhookUser_Webhook_createdByToWebhookUserNestedInput
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookUpdateManyWithoutWebhookUser_Webhook_updatedByToWebhookUserNestedInput
}

export type WebhookUserUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  externalTenantId?: Prisma.StringFieldUpdateOperationsInput | string
  externalUserId?: Prisma.StringFieldUpdateOperationsInput | string
  userRole?: Prisma.EnumWebhookRoleFieldUpdateOperationsInput | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookUncheckedUpdateManyWithoutWebhookUser_Webhook_createdByToWebhookUserNestedInput
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookUncheckedUpdateManyWithoutWebhookUser_Webhook_updatedByToWebhookUserNestedInput
}

export type WebhookUserCreateManyInput = {
  id?: string
  externalTenantId: string
  externalUserId: string
  userRole: $Enums.WebhookRole
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type WebhookUserUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  externalTenantId?: Prisma.StringFieldUpdateOperationsInput | string
  externalUserId?: Prisma.StringFieldUpdateOperationsInput | string
  userRole?: Prisma.EnumWebhookRoleFieldUpdateOperationsInput | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebhookUserUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  externalTenantId?: Prisma.StringFieldUpdateOperationsInput | string
  externalUserId?: Prisma.StringFieldUpdateOperationsInput | string
  userRole?: Prisma.EnumWebhookRoleFieldUpdateOperationsInput | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WebhookUserScalarRelationFilter = {
  is?: Prisma.WebhookUserWhereInput
  isNot?: Prisma.WebhookUserWhereInput
}

export type WebhookUserExternalTenantIdExternalUserIdCompoundUniqueInput = {
  externalTenantId: string
  externalUserId: string
}

export type WebhookUserCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  externalTenantId?: Prisma.SortOrder
  externalUserId?: Prisma.SortOrder
  userRole?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebhookUserMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  externalTenantId?: Prisma.SortOrder
  externalUserId?: Prisma.SortOrder
  userRole?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebhookUserMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  externalTenantId?: Prisma.SortOrder
  externalUserId?: Prisma.SortOrder
  userRole?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type WebhookUserCreateNestedOneWithoutWebhook_Webhook_createdByToWebhookUserInput = {
  create?: Prisma.XOR<Prisma.WebhookUserCreateWithoutWebhook_Webhook_createdByToWebhookUserInput, Prisma.WebhookUserUncheckedCreateWithoutWebhook_Webhook_createdByToWebhookUserInput>
  connectOrCreate?: Prisma.WebhookUserCreateOrConnectWithoutWebhook_Webhook_createdByToWebhookUserInput
  connect?: Prisma.WebhookUserWhereUniqueInput
}

export type WebhookUserCreateNestedOneWithoutWebhook_Webhook_updatedByToWebhookUserInput = {
  create?: Prisma.XOR<Prisma.WebhookUserCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput, Prisma.WebhookUserUncheckedCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput>
  connectOrCreate?: Prisma.WebhookUserCreateOrConnectWithoutWebhook_Webhook_updatedByToWebhookUserInput
  connect?: Prisma.WebhookUserWhereUniqueInput
}

export type WebhookUserUpdateOneRequiredWithoutWebhook_Webhook_createdByToWebhookUserNestedInput = {
  create?: Prisma.XOR<Prisma.WebhookUserCreateWithoutWebhook_Webhook_createdByToWebhookUserInput, Prisma.WebhookUserUncheckedCreateWithoutWebhook_Webhook_createdByToWebhookUserInput>
  connectOrCreate?: Prisma.WebhookUserCreateOrConnectWithoutWebhook_Webhook_createdByToWebhookUserInput
  upsert?: Prisma.WebhookUserUpsertWithoutWebhook_Webhook_createdByToWebhookUserInput
  connect?: Prisma.WebhookUserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WebhookUserUpdateToOneWithWhereWithoutWebhook_Webhook_createdByToWebhookUserInput, Prisma.WebhookUserUpdateWithoutWebhook_Webhook_createdByToWebhookUserInput>, Prisma.WebhookUserUncheckedUpdateWithoutWebhook_Webhook_createdByToWebhookUserInput>
}

export type WebhookUserUpdateOneRequiredWithoutWebhook_Webhook_updatedByToWebhookUserNestedInput = {
  create?: Prisma.XOR<Prisma.WebhookUserCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput, Prisma.WebhookUserUncheckedCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput>
  connectOrCreate?: Prisma.WebhookUserCreateOrConnectWithoutWebhook_Webhook_updatedByToWebhookUserInput
  upsert?: Prisma.WebhookUserUpsertWithoutWebhook_Webhook_updatedByToWebhookUserInput
  connect?: Prisma.WebhookUserWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.WebhookUserUpdateToOneWithWhereWithoutWebhook_Webhook_updatedByToWebhookUserInput, Prisma.WebhookUserUpdateWithoutWebhook_Webhook_updatedByToWebhookUserInput>, Prisma.WebhookUserUncheckedUpdateWithoutWebhook_Webhook_updatedByToWebhookUserInput>
}

export type EnumWebhookRoleFieldUpdateOperationsInput = {
  set?: $Enums.WebhookRole
}

export type WebhookUserCreateWithoutWebhook_Webhook_createdByToWebhookUserInput = {
  id?: string
  externalTenantId: string
  externalUserId: string
  userRole: $Enums.WebhookRole
  createdAt?: Date | string
  updatedAt?: Date | string
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookCreateNestedManyWithoutWebhookUser_Webhook_updatedByToWebhookUserInput
}

export type WebhookUserUncheckedCreateWithoutWebhook_Webhook_createdByToWebhookUserInput = {
  id?: string
  externalTenantId: string
  externalUserId: string
  userRole: $Enums.WebhookRole
  createdAt?: Date | string
  updatedAt?: Date | string
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookUncheckedCreateNestedManyWithoutWebhookUser_Webhook_updatedByToWebhookUserInput
}

export type WebhookUserCreateOrConnectWithoutWebhook_Webhook_createdByToWebhookUserInput = {
  where: Prisma.WebhookUserWhereUniqueInput
  create: Prisma.XOR<Prisma.WebhookUserCreateWithoutWebhook_Webhook_createdByToWebhookUserInput, Prisma.WebhookUserUncheckedCreateWithoutWebhook_Webhook_createdByToWebhookUserInput>
}

export type WebhookUserCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput = {
  id?: string
  externalTenantId: string
  externalUserId: string
  userRole: $Enums.WebhookRole
  createdAt?: Date | string
  updatedAt?: Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookCreateNestedManyWithoutWebhookUser_Webhook_createdByToWebhookUserInput
}

export type WebhookUserUncheckedCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput = {
  id?: string
  externalTenantId: string
  externalUserId: string
  userRole: $Enums.WebhookRole
  createdAt?: Date | string
  updatedAt?: Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookUncheckedCreateNestedManyWithoutWebhookUser_Webhook_createdByToWebhookUserInput
}

export type WebhookUserCreateOrConnectWithoutWebhook_Webhook_updatedByToWebhookUserInput = {
  where: Prisma.WebhookUserWhereUniqueInput
  create: Prisma.XOR<Prisma.WebhookUserCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput, Prisma.WebhookUserUncheckedCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput>
}

export type WebhookUserUpsertWithoutWebhook_Webhook_createdByToWebhookUserInput = {
  update: Prisma.XOR<Prisma.WebhookUserUpdateWithoutWebhook_Webhook_createdByToWebhookUserInput, Prisma.WebhookUserUncheckedUpdateWithoutWebhook_Webhook_createdByToWebhookUserInput>
  create: Prisma.XOR<Prisma.WebhookUserCreateWithoutWebhook_Webhook_createdByToWebhookUserInput, Prisma.WebhookUserUncheckedCreateWithoutWebhook_Webhook_createdByToWebhookUserInput>
  where?: Prisma.WebhookUserWhereInput
}

export type WebhookUserUpdateToOneWithWhereWithoutWebhook_Webhook_createdByToWebhookUserInput = {
  where?: Prisma.WebhookUserWhereInput
  data: Prisma.XOR<Prisma.WebhookUserUpdateWithoutWebhook_Webhook_createdByToWebhookUserInput, Prisma.WebhookUserUncheckedUpdateWithoutWebhook_Webhook_createdByToWebhookUserInput>
}

export type WebhookUserUpdateWithoutWebhook_Webhook_createdByToWebhookUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  externalTenantId?: Prisma.StringFieldUpdateOperationsInput | string
  externalUserId?: Prisma.StringFieldUpdateOperationsInput | string
  userRole?: Prisma.EnumWebhookRoleFieldUpdateOperationsInput | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookUpdateManyWithoutWebhookUser_Webhook_updatedByToWebhookUserNestedInput
}

export type WebhookUserUncheckedUpdateWithoutWebhook_Webhook_createdByToWebhookUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  externalTenantId?: Prisma.StringFieldUpdateOperationsInput | string
  externalUserId?: Prisma.StringFieldUpdateOperationsInput | string
  userRole?: Prisma.EnumWebhookRoleFieldUpdateOperationsInput | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Webhook_Webhook_updatedByToWebhookUser?: Prisma.WebhookUncheckedUpdateManyWithoutWebhookUser_Webhook_updatedByToWebhookUserNestedInput
}

export type WebhookUserUpsertWithoutWebhook_Webhook_updatedByToWebhookUserInput = {
  update: Prisma.XOR<Prisma.WebhookUserUpdateWithoutWebhook_Webhook_updatedByToWebhookUserInput, Prisma.WebhookUserUncheckedUpdateWithoutWebhook_Webhook_updatedByToWebhookUserInput>
  create: Prisma.XOR<Prisma.WebhookUserCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput, Prisma.WebhookUserUncheckedCreateWithoutWebhook_Webhook_updatedByToWebhookUserInput>
  where?: Prisma.WebhookUserWhereInput
}

export type WebhookUserUpdateToOneWithWhereWithoutWebhook_Webhook_updatedByToWebhookUserInput = {
  where?: Prisma.WebhookUserWhereInput
  data: Prisma.XOR<Prisma.WebhookUserUpdateWithoutWebhook_Webhook_updatedByToWebhookUserInput, Prisma.WebhookUserUncheckedUpdateWithoutWebhook_Webhook_updatedByToWebhookUserInput>
}

export type WebhookUserUpdateWithoutWebhook_Webhook_updatedByToWebhookUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  externalTenantId?: Prisma.StringFieldUpdateOperationsInput | string
  externalUserId?: Prisma.StringFieldUpdateOperationsInput | string
  userRole?: Prisma.EnumWebhookRoleFieldUpdateOperationsInput | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookUpdateManyWithoutWebhookUser_Webhook_createdByToWebhookUserNestedInput
}

export type WebhookUserUncheckedUpdateWithoutWebhook_Webhook_updatedByToWebhookUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  externalTenantId?: Prisma.StringFieldUpdateOperationsInput | string
  externalUserId?: Prisma.StringFieldUpdateOperationsInput | string
  userRole?: Prisma.EnumWebhookRoleFieldUpdateOperationsInput | $Enums.WebhookRole
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Webhook_Webhook_createdByToWebhookUser?: Prisma.WebhookUncheckedUpdateManyWithoutWebhookUser_Webhook_createdByToWebhookUserNestedInput
}


/**
 * Count Type WebhookUserCountOutputType
 */

export type WebhookUserCountOutputType = {
  Webhook_Webhook_createdByToWebhookUser: number
  Webhook_Webhook_updatedByToWebhookUser: number
}

export type WebhookUserCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Webhook_Webhook_createdByToWebhookUser?: boolean | WebhookUserCountOutputTypeCountWebhook_Webhook_createdByToWebhookUserArgs
  Webhook_Webhook_updatedByToWebhookUser?: boolean | WebhookUserCountOutputTypeCountWebhook_Webhook_updatedByToWebhookUserArgs
}

/**
 * WebhookUserCountOutputType without action
 */
export type WebhookUserCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUserCountOutputType
   */
  select?: Prisma.WebhookUserCountOutputTypeSelect<ExtArgs> | null
}

/**
 * WebhookUserCountOutputType without action
 */
export type WebhookUserCountOutputTypeCountWebhook_Webhook_createdByToWebhookUserArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WebhookWhereInput
}

/**
 * WebhookUserCountOutputType without action
 */
export type WebhookUserCountOutputTypeCountWebhook_Webhook_updatedByToWebhookUserArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WebhookWhereInput
}


export type WebhookUserSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  externalTenantId?: boolean
  externalUserId?: boolean
  userRole?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Webhook_Webhook_createdByToWebhookUser?: boolean | Prisma.WebhookUser$Webhook_Webhook_createdByToWebhookUserArgs<ExtArgs>
  Webhook_Webhook_updatedByToWebhookUser?: boolean | Prisma.WebhookUser$Webhook_Webhook_updatedByToWebhookUserArgs<ExtArgs>
  _count?: boolean | Prisma.WebhookUserCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["webhookUser"]>

export type WebhookUserSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  externalTenantId?: boolean
  externalUserId?: boolean
  userRole?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["webhookUser"]>

export type WebhookUserSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  externalTenantId?: boolean
  externalUserId?: boolean
  userRole?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["webhookUser"]>

export type WebhookUserSelectScalar = {
  id?: boolean
  externalTenantId?: boolean
  externalUserId?: boolean
  userRole?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type WebhookUserOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "externalTenantId" | "externalUserId" | "userRole" | "createdAt" | "updatedAt", ExtArgs["result"]["webhookUser"]>
export type WebhookUserInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Webhook_Webhook_createdByToWebhookUser?: boolean | Prisma.WebhookUser$Webhook_Webhook_createdByToWebhookUserArgs<ExtArgs>
  Webhook_Webhook_updatedByToWebhookUser?: boolean | Prisma.WebhookUser$Webhook_Webhook_updatedByToWebhookUserArgs<ExtArgs>
  _count?: boolean | Prisma.WebhookUserCountOutputTypeDefaultArgs<ExtArgs>
}
export type WebhookUserIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type WebhookUserIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $WebhookUserPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "WebhookUser"
  objects: {
    Webhook_Webhook_createdByToWebhookUser: Prisma.$WebhookPayload<ExtArgs>[]
    Webhook_Webhook_updatedByToWebhookUser: Prisma.$WebhookPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    /**
     * @DtoCreateHidden
     */
    id: string
    externalTenantId: string
    externalUserId: string
    userRole: $Enums.WebhookRole
    /**
     * @DtoCreateHidden
     * @DtoUpdateHidden
     */
    createdAt: Date
    /**
     * @DtoCreateHidden
     * @DtoUpdateHidden
     */
    updatedAt: Date
  }, ExtArgs["result"]["webhookUser"]>
  composites: {}
}

export type WebhookUserGetPayload<S extends boolean | null | undefined | WebhookUserDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload, S>

export type WebhookUserCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<WebhookUserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: WebhookUserCountAggregateInputType | true
  }

export interface WebhookUserDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WebhookUser'], meta: { name: 'WebhookUser' } }
  /**
   * Find zero or one WebhookUser that matches the filter.
   * @param {WebhookUserFindUniqueArgs} args - Arguments to find a WebhookUser
   * @example
   * // Get one WebhookUser
   * const webhookUser = await prisma.webhookUser.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WebhookUserFindUniqueArgs>(args: Prisma.SelectSubset<T, WebhookUserFindUniqueArgs<ExtArgs>>): Prisma.Prisma__WebhookUserClient<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one WebhookUser that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WebhookUserFindUniqueOrThrowArgs} args - Arguments to find a WebhookUser
   * @example
   * // Get one WebhookUser
   * const webhookUser = await prisma.webhookUser.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WebhookUserFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, WebhookUserFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__WebhookUserClient<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WebhookUser that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookUserFindFirstArgs} args - Arguments to find a WebhookUser
   * @example
   * // Get one WebhookUser
   * const webhookUser = await prisma.webhookUser.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WebhookUserFindFirstArgs>(args?: Prisma.SelectSubset<T, WebhookUserFindFirstArgs<ExtArgs>>): Prisma.Prisma__WebhookUserClient<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WebhookUser that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookUserFindFirstOrThrowArgs} args - Arguments to find a WebhookUser
   * @example
   * // Get one WebhookUser
   * const webhookUser = await prisma.webhookUser.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WebhookUserFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, WebhookUserFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__WebhookUserClient<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more WebhookUsers that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookUserFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WebhookUsers
   * const webhookUsers = await prisma.webhookUser.findMany()
   * 
   * // Get first 10 WebhookUsers
   * const webhookUsers = await prisma.webhookUser.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const webhookUserWithIdOnly = await prisma.webhookUser.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends WebhookUserFindManyArgs>(args?: Prisma.SelectSubset<T, WebhookUserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a WebhookUser.
   * @param {WebhookUserCreateArgs} args - Arguments to create a WebhookUser.
   * @example
   * // Create one WebhookUser
   * const WebhookUser = await prisma.webhookUser.create({
   *   data: {
   *     // ... data to create a WebhookUser
   *   }
   * })
   * 
   */
  create<T extends WebhookUserCreateArgs>(args: Prisma.SelectSubset<T, WebhookUserCreateArgs<ExtArgs>>): Prisma.Prisma__WebhookUserClient<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many WebhookUsers.
   * @param {WebhookUserCreateManyArgs} args - Arguments to create many WebhookUsers.
   * @example
   * // Create many WebhookUsers
   * const webhookUser = await prisma.webhookUser.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends WebhookUserCreateManyArgs>(args?: Prisma.SelectSubset<T, WebhookUserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many WebhookUsers and returns the data saved in the database.
   * @param {WebhookUserCreateManyAndReturnArgs} args - Arguments to create many WebhookUsers.
   * @example
   * // Create many WebhookUsers
   * const webhookUser = await prisma.webhookUser.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many WebhookUsers and only return the `id`
   * const webhookUserWithIdOnly = await prisma.webhookUser.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends WebhookUserCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, WebhookUserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a WebhookUser.
   * @param {WebhookUserDeleteArgs} args - Arguments to delete one WebhookUser.
   * @example
   * // Delete one WebhookUser
   * const WebhookUser = await prisma.webhookUser.delete({
   *   where: {
   *     // ... filter to delete one WebhookUser
   *   }
   * })
   * 
   */
  delete<T extends WebhookUserDeleteArgs>(args: Prisma.SelectSubset<T, WebhookUserDeleteArgs<ExtArgs>>): Prisma.Prisma__WebhookUserClient<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one WebhookUser.
   * @param {WebhookUserUpdateArgs} args - Arguments to update one WebhookUser.
   * @example
   * // Update one WebhookUser
   * const webhookUser = await prisma.webhookUser.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends WebhookUserUpdateArgs>(args: Prisma.SelectSubset<T, WebhookUserUpdateArgs<ExtArgs>>): Prisma.Prisma__WebhookUserClient<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more WebhookUsers.
   * @param {WebhookUserDeleteManyArgs} args - Arguments to filter WebhookUsers to delete.
   * @example
   * // Delete a few WebhookUsers
   * const { count } = await prisma.webhookUser.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends WebhookUserDeleteManyArgs>(args?: Prisma.SelectSubset<T, WebhookUserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WebhookUsers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookUserUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WebhookUsers
   * const webhookUser = await prisma.webhookUser.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends WebhookUserUpdateManyArgs>(args: Prisma.SelectSubset<T, WebhookUserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WebhookUsers and returns the data updated in the database.
   * @param {WebhookUserUpdateManyAndReturnArgs} args - Arguments to update many WebhookUsers.
   * @example
   * // Update many WebhookUsers
   * const webhookUser = await prisma.webhookUser.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more WebhookUsers and only return the `id`
   * const webhookUserWithIdOnly = await prisma.webhookUser.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends WebhookUserUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, WebhookUserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one WebhookUser.
   * @param {WebhookUserUpsertArgs} args - Arguments to update or create a WebhookUser.
   * @example
   * // Update or create a WebhookUser
   * const webhookUser = await prisma.webhookUser.upsert({
   *   create: {
   *     // ... data to create a WebhookUser
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WebhookUser we want to update
   *   }
   * })
   */
  upsert<T extends WebhookUserUpsertArgs>(args: Prisma.SelectSubset<T, WebhookUserUpsertArgs<ExtArgs>>): Prisma.Prisma__WebhookUserClient<runtime.Types.Result.GetResult<Prisma.$WebhookUserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of WebhookUsers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookUserCountArgs} args - Arguments to filter WebhookUsers to count.
   * @example
   * // Count the number of WebhookUsers
   * const count = await prisma.webhookUser.count({
   *   where: {
   *     // ... the filter for the WebhookUsers we want to count
   *   }
   * })
  **/
  count<T extends WebhookUserCountArgs>(
    args?: Prisma.Subset<T, WebhookUserCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WebhookUserCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a WebhookUser.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookUserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends WebhookUserAggregateArgs>(args: Prisma.Subset<T, WebhookUserAggregateArgs>): Prisma.PrismaPromise<GetWebhookUserAggregateType<T>>

  /**
   * Group by WebhookUser.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WebhookUserGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends WebhookUserGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WebhookUserGroupByArgs['orderBy'] }
      : { orderBy?: WebhookUserGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, WebhookUserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWebhookUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the WebhookUser model
 */
readonly fields: WebhookUserFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WebhookUser.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WebhookUserClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Webhook_Webhook_createdByToWebhookUser<T extends Prisma.WebhookUser$Webhook_Webhook_createdByToWebhookUserArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WebhookUser$Webhook_Webhook_createdByToWebhookUserArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Webhook_Webhook_updatedByToWebhookUser<T extends Prisma.WebhookUser$Webhook_Webhook_updatedByToWebhookUserArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WebhookUser$Webhook_Webhook_updatedByToWebhookUserArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WebhookPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the WebhookUser model
 */
export interface WebhookUserFieldRefs {
  readonly id: Prisma.FieldRef<"WebhookUser", 'String'>
  readonly externalTenantId: Prisma.FieldRef<"WebhookUser", 'String'>
  readonly externalUserId: Prisma.FieldRef<"WebhookUser", 'String'>
  readonly userRole: Prisma.FieldRef<"WebhookUser", 'WebhookRole'>
  readonly createdAt: Prisma.FieldRef<"WebhookUser", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"WebhookUser", 'DateTime'>
}
    

// Custom InputTypes
/**
 * WebhookUser findUnique
 */
export type WebhookUserFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * Filter, which WebhookUser to fetch.
   */
  where: Prisma.WebhookUserWhereUniqueInput
}

/**
 * WebhookUser findUniqueOrThrow
 */
export type WebhookUserFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * Filter, which WebhookUser to fetch.
   */
  where: Prisma.WebhookUserWhereUniqueInput
}

/**
 * WebhookUser findFirst
 */
export type WebhookUserFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * Filter, which WebhookUser to fetch.
   */
  where?: Prisma.WebhookUserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebhookUsers to fetch.
   */
  orderBy?: Prisma.WebhookUserOrderByWithRelationInput | Prisma.WebhookUserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WebhookUsers.
   */
  cursor?: Prisma.WebhookUserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebhookUsers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebhookUsers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WebhookUsers.
   */
  distinct?: Prisma.WebhookUserScalarFieldEnum | Prisma.WebhookUserScalarFieldEnum[]
}

/**
 * WebhookUser findFirstOrThrow
 */
export type WebhookUserFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * Filter, which WebhookUser to fetch.
   */
  where?: Prisma.WebhookUserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebhookUsers to fetch.
   */
  orderBy?: Prisma.WebhookUserOrderByWithRelationInput | Prisma.WebhookUserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WebhookUsers.
   */
  cursor?: Prisma.WebhookUserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebhookUsers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebhookUsers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WebhookUsers.
   */
  distinct?: Prisma.WebhookUserScalarFieldEnum | Prisma.WebhookUserScalarFieldEnum[]
}

/**
 * WebhookUser findMany
 */
export type WebhookUserFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * Filter, which WebhookUsers to fetch.
   */
  where?: Prisma.WebhookUserWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WebhookUsers to fetch.
   */
  orderBy?: Prisma.WebhookUserOrderByWithRelationInput | Prisma.WebhookUserOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing WebhookUsers.
   */
  cursor?: Prisma.WebhookUserWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WebhookUsers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WebhookUsers.
   */
  skip?: number
  distinct?: Prisma.WebhookUserScalarFieldEnum | Prisma.WebhookUserScalarFieldEnum[]
}

/**
 * WebhookUser create
 */
export type WebhookUserCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * The data needed to create a WebhookUser.
   */
  data: Prisma.XOR<Prisma.WebhookUserCreateInput, Prisma.WebhookUserUncheckedCreateInput>
}

/**
 * WebhookUser createMany
 */
export type WebhookUserCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many WebhookUsers.
   */
  data: Prisma.WebhookUserCreateManyInput | Prisma.WebhookUserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * WebhookUser createManyAndReturn
 */
export type WebhookUserCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * The data used to create many WebhookUsers.
   */
  data: Prisma.WebhookUserCreateManyInput | Prisma.WebhookUserCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * WebhookUser update
 */
export type WebhookUserUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * The data needed to update a WebhookUser.
   */
  data: Prisma.XOR<Prisma.WebhookUserUpdateInput, Prisma.WebhookUserUncheckedUpdateInput>
  /**
   * Choose, which WebhookUser to update.
   */
  where: Prisma.WebhookUserWhereUniqueInput
}

/**
 * WebhookUser updateMany
 */
export type WebhookUserUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update WebhookUsers.
   */
  data: Prisma.XOR<Prisma.WebhookUserUpdateManyMutationInput, Prisma.WebhookUserUncheckedUpdateManyInput>
  /**
   * Filter which WebhookUsers to update
   */
  where?: Prisma.WebhookUserWhereInput
  /**
   * Limit how many WebhookUsers to update.
   */
  limit?: number
}

/**
 * WebhookUser updateManyAndReturn
 */
export type WebhookUserUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * The data used to update WebhookUsers.
   */
  data: Prisma.XOR<Prisma.WebhookUserUpdateManyMutationInput, Prisma.WebhookUserUncheckedUpdateManyInput>
  /**
   * Filter which WebhookUsers to update
   */
  where?: Prisma.WebhookUserWhereInput
  /**
   * Limit how many WebhookUsers to update.
   */
  limit?: number
}

/**
 * WebhookUser upsert
 */
export type WebhookUserUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * The filter to search for the WebhookUser to update in case it exists.
   */
  where: Prisma.WebhookUserWhereUniqueInput
  /**
   * In case the WebhookUser found by the `where` argument doesn't exist, create a new WebhookUser with this data.
   */
  create: Prisma.XOR<Prisma.WebhookUserCreateInput, Prisma.WebhookUserUncheckedCreateInput>
  /**
   * In case the WebhookUser was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WebhookUserUpdateInput, Prisma.WebhookUserUncheckedUpdateInput>
}

/**
 * WebhookUser delete
 */
export type WebhookUserDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
  /**
   * Filter which WebhookUser to delete.
   */
  where: Prisma.WebhookUserWhereUniqueInput
}

/**
 * WebhookUser deleteMany
 */
export type WebhookUserDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WebhookUsers to delete
   */
  where?: Prisma.WebhookUserWhereInput
  /**
   * Limit how many WebhookUsers to delete.
   */
  limit?: number
}

/**
 * WebhookUser.Webhook_Webhook_createdByToWebhookUser
 */
export type WebhookUser$Webhook_Webhook_createdByToWebhookUserArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webhook
   */
  select?: Prisma.WebhookSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webhook
   */
  omit?: Prisma.WebhookOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookInclude<ExtArgs> | null
  where?: Prisma.WebhookWhereInput
  orderBy?: Prisma.WebhookOrderByWithRelationInput | Prisma.WebhookOrderByWithRelationInput[]
  cursor?: Prisma.WebhookWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WebhookScalarFieldEnum | Prisma.WebhookScalarFieldEnum[]
}

/**
 * WebhookUser.Webhook_Webhook_updatedByToWebhookUser
 */
export type WebhookUser$Webhook_Webhook_updatedByToWebhookUserArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Webhook
   */
  select?: Prisma.WebhookSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Webhook
   */
  omit?: Prisma.WebhookOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookInclude<ExtArgs> | null
  where?: Prisma.WebhookWhereInput
  orderBy?: Prisma.WebhookOrderByWithRelationInput | Prisma.WebhookOrderByWithRelationInput[]
  cursor?: Prisma.WebhookWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.WebhookScalarFieldEnum | Prisma.WebhookScalarFieldEnum[]
}

/**
 * WebhookUser without action
 */
export type WebhookUserDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WebhookUser
   */
  select?: Prisma.WebhookUserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WebhookUser
   */
  omit?: Prisma.WebhookUserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WebhookUserInclude<ExtArgs> | null
}
