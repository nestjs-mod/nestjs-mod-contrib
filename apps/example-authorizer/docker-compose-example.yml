# Do not modify this file, it is generated using the DockerCompose module included with NestJS-mod.
version: "3"
services:
  example-authorizer-postgre-sql:
    image: "bitnami/postgresql:15.5.0"
    container_name: "example-authorizer-postgre-sql"
    volumes:
      - "example-authorizer-postgre-sql-volume:/bitnami/postgresql"
    ports:
      - "5432:5432"
    networks:
      - "example-authorizer-network"
    healthcheck:
      test:
        - "CMD-SHELL"
        - "pg_isready -U postgres"
      interval: "5s"
      timeout: "5s"
      retries: 5
    tty: true
    restart: "always"
    environment:
      POSTGRESQL_USERNAME: ""
      POSTGRESQL_PASSWORD: ""
      POSTGRESQL_DATABASE: ""
  example-authorizer-authorizer:
    image: "lakhansamani/authorizer:1.3.8"
    container_name: "example-authorizer-authorizer"
    ports:
      - "8080:8080"
    networks:
      - "example-authorizer-network"
    environment:
      DATABASE_TYPE: ""
      DATABASE_URL: ""
      DATABASE_NAME: ""
      ADMIN_SECRET: ""
      PORT: ""
      COOKIE_NAME: ""
      DISABLE_PLAYGROUND: ""
      ACCESS_TOKEN_EXPIRY_TIME: ""
      IMAGE: ""
      EXTERNAL_CLIENT_PORT: ""
      ENV: ""
      RESET_PASSWORD_URL: ""
      ROLES: ""
      DEFAULT_ROLES: ""
      JWT_ROLE_CLAIM: ""
      ORGANIZATION_NAME: ""
      ORGANIZATION_LOGO: ""
      COUCHBASE_BUCKET: ""
      COUCHBASE_BUCKET_RAM_QUOTA: ""
      COUCHBASE_SCOPE: ""
    tty: true
    restart: "always"
    depends_on: {}
networks:
  example-authorizer-network:
    driver: "bridge"
volumes:
  example-authorizer-postgre-sql-volume:
    name: "example-authorizer-postgre-sql-volume"
