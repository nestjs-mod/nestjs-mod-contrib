{
  "afat": {
    "field \"{{label}}\"": "поле \"{{label}}\""
  },
  "authorizer": {},
  "sso": {
    "Forbidden": "Запрещено",
    "Sso error": "Ошибка SSO",
    "Unauthorized": "Неавторизован"
  },
  "supabase": {
    "Forbidden": "Запрещено",
    "Supabase error": "Ошибка Supabase",
    "Unauthorized": "Неавторизован"
  },
  "cache-manager": {},
  "docker-compose": {},
  "flyway": {},
  "graphql": {},
  "keyv": {},
  "minio": {},
  "pg-flyway": {},
  "pino": {},
  "pm2": {},
  "prisma": {},
  "runtime-tools": {},
  "terminus": {},
  "data-prefetch": {},
  "bridge-react-webpack-plugin": {},
  "swagger": {},
  "sso-getText": {
    "Forbidden": "Запрещено",
    "Sso error": "Ошибка SSO",
    "Unauthorized": "Неавторизован"
  },
  "supabase-getText": {
    "Forbidden": "Запрещено",
    "Supabase error": "Ошибка Supabase",
    "Unauthorized": "Неавторизован"
  },
  "prisma-tools-getText": {
    "Common db error": "Ошибка базы данных",
    "Database query error": "Ошибка запроса к базе данных",
    "Invalid identifier": "Неверный идентификатор",
    "Invalid linked table identifier": "Неверный идентификатор связанной таблицы",
    "Not found error": "Не найдено",
    "Unhandled error": "Необработанная ошибка",
    "Unique error": "Ошибка уникальности"
  },
  "prisma-tools": {
    "Common db error": "Ошибка базы данных",
    "Database query error": "Ошибка запроса к базе данных",
    "Invalid identifier": "Неверный идентификатор",
    "Invalid linked table identifier": "Неверный идентификатор связанной таблицы",
    "Not found error": "Не найдено",
    "Unhandled error": "Необработанная ошибка",
    "Unique error": "Ошибка уникальности"
  },
  "files-getText": {
    "Files error": "Ошибка файлов",
    "Forbidden": "Нет доступа",
    "ok": "ок",
    "Only those who uploaded files can delete them": "Удалить файлы могут только те, кто их загрузил.",
    "Uploading files with extension \"{{ext}}\" is not supported": "Загрузка файлов с расширением \"{{ext}}\" не поддерживается.",
    "Event that fires after a file is deleted": "Событие которое срабатывает после удаления файла"
  },
  "files-afat": {
    "files.image-file.change-file": "Изменить",
    "files.image-file.select-file": "Выбрать"
  },
  "notifications-getText": {
    "Forbidden": "Нет доступа",
    "Notifications error": "Ошибка уведомлений",
    "Tenant ID not set": "Идентификатор клиента не установлен",
    "The letter was not sent because the transport parameters or the letter parameters were empty": "Письмо не было отправлено, потому что параметры транспорта или параметры письма были пустыми",
    "User ID not set": "Идентификатор пользователя не установлен",
    "Event that fires after a notification is created": "Событие которое срабатывает после создания уведомления",
    "Event that fires after a notification is sent": "Событие которое срабатывает после отправки уведомления",
    "Event that fires after a notification is updated": "Событие которое срабатывает после обновления уведомления",
    "Event that occurs when there is an error sending a notification": "Событие, которое возникает при ошибке отправки уведомления"
  },
  "two-factor-getText": {
    "Number of attempts of two factor code has been exhausted": "Количество попыток ввода двухфакторного кода исчерпано",
    "recursive method recursiveGenTwoFactorCode has been run more than 10 times": "Рекурсивный метод recursiveGenTwoFactorCode был выполнен более 10 раз",
    "Two factor code not set": "Двухфакторный код не установлен",
    "Two factor error": "Ошибка двухфакторной аутентификации",
    "Wrong two factor code": "Неправильный двухфакторный код",
    "Two factor code is outdated": "Двухфакторный код устарел",
    "Please wait 30 seconds": "Пожалуйста, подождите 30 секунд",
    "Two-factor code has already been used": "Код двухфакторной аутентификации уже использован",
    "Please wait {{{timeout}}} seconds": "Пожалуйста, подождите {{{timeout}}} сек."
  },
  "webhook-getText": {
    "Event not found": "Событие не найдено",
    "Forbidden": "Нет доступа",
    "ok": "ок",
    "Tenant ID not set": "Идентификатор клиента не установлен",
    "User ID not set": "Идентификатор пользователя не установлен",
    "User not found": "Пользователь не найден",
    "Webhook error": "Ошибка вебхука"
  },
  "webhook-afat": {
    "Logs for webhook #{{webhookId}}": "Журналы для вебхука #{{webhookId}}",
    "input search text": "введите текст поиска",
    "Action": "Действия",
    "View": "Информация",
    "Delete": "Удалить",
    "select tenant": "выберите тенант",
    "Loading...": "Загрузка...",
    "Create new": "Создать",
    "Edit": "Изменить",
    "Save": "Сохранить",
    "Create": "Создать",
    "webhook-log.form.fields.request": "Запрос",
    "webhook-log.form.fields.webhook-status": "Статус",
    "webhook-log.form.fields.response": "Ответ",
    "webhook-log.form.fields.response-status": "Статус ответа",
    "webhook.form.fields.endpoint": "Адрес",
    "webhook.form.fields.event-name": "Событие",
    "webhook.form.fields.headers": "Заголовки",
    "webhook.form.fields.enabled": "Активен",
    "webhook.form.fields.request-timeout": "Таймаут запроса (мс)",
    "webhook.form.fields.work-until-date": "До какой даты может работать",
    "Example of payload": "Пример данных для отправки",
    "webhook-log.view-modal.title": "Информация о логе вебхука #{{ id }}",
    "Close": "Закрыть",
    "webhook-log.delete-modal.title": "Удалить лог вебхука #{{ id }}",
    "Yes": "Да",
    "No": "Нет",
    "webhook-log.grid.columns.id": "ИД.",
    "webhook-log.grid.columns.request": "Запрос",
    "webhook-log.grid.columns.response": "Ответ",
    "webhook-log.grid.columns.response-status": "Статус ответа",
    "webhook-log.grid.columns.webhook-status": "Статус",
    "webhook.test-request-modal.success-title": "Тестовый запрос прошел успешно",
    "webhook.test-request-modal.error-title": "Тестовый запрос прошел с ошибкой",
    "webhook.update-modal.title": "Изменить вебхук #{{ id }}",
    "webhook.create-modal.title": "Создать новый вебхук",
    "Test request": "Тестовый запрос",
    "Cancel": "Отмена",
    "webhook.delete-modal.title": "Удалить вебхук #{{ id }}",
    "webhook.grid.columns.id": "ИД.",
    "webhook.grid.columns.enabled": "Активен",
    "webhook.grid.columns.endpoint": "Адрес",
    "webhook.grid.columns.event-name": "Событие",
    "webhook.grid.columns.headers": "Заголовки",
    "webhook.grid.columns.request-timeout": "Таймаут запроса (мс)",
    "webhook.grid.columns.work-until-date": "До какой даты может работать",
    "id not set": "идентификатор не установлен",
    "Success": "Успешно",
    "Fill user credentials": "Заполните учетные данные пользователя",
    "Fill admin credentials": "Заполните учетные данные администратора",
    "Sign-in": "Войти",
    "Validation errors": "Ошибка при проверке данных"
  },
  "validation-getText": {
    "Validation error": "Ошибка проверки"
  },
  "files": {
    "Files error": "Ошибка файлов",
    "Forbidden": "Нет доступа",
    "ok": "ок",
    "Only those who uploaded files can delete them": "Удалить файлы могут только те, кто их загрузил.",
    "Uploading files with extension \"{{ext}}\" is not supported": "Загрузка файлов с расширением \"{{ext}}\" не поддерживается.",
    "Event that fires after a file is deleted": "Событие которое срабатывает после удаления файла"
  },
  "notifications": {
    "Forbidden": "Нет доступа",
    "Notifications error": "Ошибка уведомлений",
    "Tenant ID not set": "Идентификатор клиента не установлен",
    "The letter was not sent because the transport parameters or the letter parameters were empty": "Письмо не было отправлено, потому что параметры транспорта или параметры письма были пустыми",
    "User ID not set": "Идентификатор пользователя не установлен",
    "Event that fires after a notification is created": "Событие которое срабатывает после создания уведомления",
    "Event that fires after a notification is sent": "Событие которое срабатывает после отправки уведомления",
    "Event that fires after a notification is updated": "Событие которое срабатывает после обновления уведомления",
    "Event that occurs when there is an error sending a notification": "Событие, которое возникает при ошибке отправки уведомления"
  },
  "two-factor": {
    "Number of attempts of two factor code has been exhausted": "Количество попыток ввода двухфакторного кода исчерпано",
    "recursive method recursiveGenTwoFactorCode has been run more than 10 times": "Рекурсивный метод recursiveGenTwoFactorCode был выполнен более 10 раз",
    "Two factor code not set": "Двухфакторный код не установлен",
    "Two factor error": "Ошибка двухфакторной аутентификации",
    "Wrong two factor code": "Неправильный двухфакторный код",
    "Two factor code is outdated": "Двухфакторный код устарел",
    "Please wait 30 seconds": "Пожалуйста, подождите 30 секунд",
    "Two-factor code has already been used": "Код двухфакторной аутентификации уже использован",
    "Please wait {{{timeout}}} seconds": "Пожалуйста, подождите {{{timeout}}} сек."
  },
  "webhook": {
    "Event not found": "Событие не найдено",
    "Forbidden": "Нет доступа",
    "ok": "ок",
    "Tenant ID not set": "Идентификатор клиента не установлен",
    "User ID not set": "Идентификатор пользователя не установлен",
    "User not found": "Пользователь не найден",
    "Webhook error": "Ошибка вебхука"
  },
  "validation": {
    "Validation error": "Ошибка проверки"
  }
}
